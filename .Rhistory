a[1]
a[grepl('\"low_price\"', a)]
a[grepl('\"list_price\"', a)]
a = page %>% html_nodes("script.type") %>% html_text()
a
a = page %>% html_nodes("script.text/javascript") %>% html_text()
a = page %>% html_nodes("script.text") %>% html_text()
a
a = page %>% html_nodes("span") %>% html_text()
a
a = page %>% html_nodes("div") %>% html_text()
a
grepl("list_price", a)
a = page %>% html_nodes("scripts") %>% html_text()
a
a = page %>% html_nodes("script") %>% html_text()
grepl("list_price", a)
a[grepl("list_price", a)]
a[grepl("list_price", a[1])]
a[1]
a = page %>% html_nodes("script") %>% html_text() %>% gsub("\n|\", "", .)
a[grepl("list_price", a[1])]
a = page %>% html_nodes("script") %>% html_text() %>% gsub("\n|", "", .)
a[grepl("list_price", a[1])]
a[1]
a[2]
a[3]
a[4]
a[5]
a[6]
a[7]
a[8]
a[9]
a[10]
a = page %>% html_nodes("script")
a[[1]] %>% html_text()
a[[20]] %>% html_text()
a[[21]] %>% html_text()
a[[22]] %>% html_text()
a = page %>% html_nodes("script") %>% html_text()
a[grepl("\nwindow.wf = window.wf", a)]
a[grepl("window.wf = window.wf", a)]
a = page %>% html_nodes("#AddToCartForm .emphasis.fl") %>% html_text()
a
page %>% html_nodes(xpath="#AddToCartForm .emphasis.fl") %>% html_text()
page %>% html_tag("#AddToCartForm .emphasis.fl") %>% html_text()
page %>% html_attr("#AddToCartForm .emphasis.fl") %>% html_text()
page %>% html_nodes("#AddToCartForm .emphasis.fl") %>% html_text()
page %>% html_nodes("#AddToCartForm") %>% html_text()
library(XML)
doc <- htmlParse(url, useInternalNodes=T)
names   = doc["//meta/@name"]
names
content = doc["//meta/@content"]
content
cbind(names, content)
properties   = doc["//meta/@property"]
content = doc["//meta/@content"]
cbind(properties, content)
properties
str(content)
length(properties)
length(content)
(title   = doc["//meta/@property='og:title'"])
str(title)
(title   = doc["//meta/@property"])
title =='og:title'
xpathSApply(doc, "//meta/@property")
str(xpathSApply(doc, "//meta/@property"))
xpathSApply(doc, "//meta/@content")
property = xpathSApply(doc, "//meta/@property")
content = xpathSApply(doc, "//meta/@content")
cbind(property, content)
str(property)
title = property["og:title"]
title
property = xpathSApply(doc, "//meta/@content[@property=='og:title'")
property = xpathSApply(doc, "//meta/@content[@property='og:title']")
(property = xpathSApply(doc, "//meta/@content[@property='og:title']"))
property %>% html_text()
xpathSApply
?xpathSApply
(property = xpathSApply(doc, "//meta/@content@property"))
(property = xpathSApply(doc, "//meta/@content/@property"))
xpathSApply(doc, "//meta/@xmlns:og")
xpathSApply(doc, "//meta/@xmlns")
content = xpathSApply(doc, "//meta/@content") %>% html_text()
content = xpathSApply(doc, "//meta/@content")
content
str(content)
(property = xpathSApply(doc, "//meta/@property"))
names = xpathSApply(doc, "//meta/@name")
names
str(names)
xpathSApply(doc, "//meta[property='og:title']/@content")
xpathSApply(doc, "/*/head/meta[property='og:title']/@content")
xpathSApply(doc, "/*/head/meta[@property='og:title']/@content")
string(xpathSApply(doc, "/*/head/meta[@property='og:title']/@content"))
xpathSApply(doc, "/*/head/meta[@property='og:title']/@content") %>% html_text()
xpathSApply(doc, "/*/head/meta[@property='og:title']/@content")
str(xpathSApply(doc, "/*/head/meta[@property='og:title']/@content"))
title = xpathSApply(doc, "/*/head/meta[@property='og:title']/@content")
names(title) = NULL
title
price = xpathSApply(doc, "/*/head/meta[@property='og:price:amount'/@content")
price = xpathSApply(doc, "/*/head/meta[@property='og:price:amount']/@content")
price
names(price) = NULL
price
if (!grepl("$", price)) price = paste0("$", price)
price
price
grepl("$", price)
if (!grepl("\$", price)) price = paste0("$", price)
if (!grepl("/$", price)) price = paste0("$", price)
price
(in_stock = page %>% html_nodes(".noticetext") %>% html_text())
url = "http://www.wayfair.com/Delta-Children-Disney-Minnie-Mouse-Kids-Club-Chair-TC85689MN-DEL1510.html"
page = html(url, encoding="UTF-8")
doc = htmlParse(url, useInternalNodes=T)
title = xpathSApply(doc, "/*/head/meta[@property='og:title']/@content")
names(title) = NULL
title
price = xpathSApply(doc, "/*/head/meta[@property='og:price:amount']/@content")
names(price) = NULL
if (!grepl("/$", price)) price = paste0("$", price)
price
(in_stock = page %>% html_nodes(".noticetext") %>% html_text())
url = "http://www.wayfair.com/Delta-Children-Disney-Minnie-Mouse-Kids-Club-Chair-TC85689MN-DEL1510.html"
page = html(url, encoding="UTF-8")
(in_stock = page %>% html_nodes(".noticetext") %>% html_text())
(in_stock = page %>% html_nodes(".noticetext") %>% html_text())
page
(in_stock = page %>% html_nodes("#ship_display > span.noticetext") %>% html_text())
page
(in_stock = page %>% html_nodes("#ship_display span.noticetext") %>% html_text())
(in_stock = page %>% html_nodes("span.noticetext") %>% html_text())
(in_stock = page %>% html_nodes("span") %>% html_text())
(in_stock = page %>% html_nodes("#ship_display") %>% html_text())
xpathSApply(doc, "/*/head/link[@itemprop='availability']/@href")
xpathSApply(doc, "/*/head/div/link[@itemprop='availability']/@href")
(in_stock = page %>% html_nodes("div") %>% html_text())
in_stock = page %>% html_nodes("div")
in_stock
xpathSApply(doc, "//link[@itemprop='availability']/@href")
in_stock = xpathSApply(doc, "//link[@itemprop='availability']/@href")
names(in_stock) = NULL
in_stock
strsplit(in_stock, "/")
a = strsplit(in_stock, "/")[[1]]
length(a)
a[length(a)]
status_url = xpathSApply(doc, "//link[@itemprop='availability']/@href")
names(status_url) = NULL
if (length(in_stock) != 0) {
a = strsplit(in_stock, "/")[[1]]
in_stock =a[length(a)]
}
status_url
status_url = xpathSApply(doc, "//link[@itemprop='availability']/@href")
names(status_url) = NULL
if (length(status_url) != 0) {
a = strsplit(in_stock, "/")[[1]]
in_stock = a[length(a)]
} else { in_stock = "in stock" }
in_stock
url = "http://www.monoprice.com/Product?c_id=112&cp_id=11213&cs_id=1121303&p_id=12406&seq=1&format=2"
page = html(url, encoding="UTF-8")
page
(title = page %>% html_nodes("title") %>% html_text())
(price = page %>% html_nodes(".price-title+ span") %>% html_text())
(price = page %>% html_nodes(".price") %>% html_text())
(price = page %>% html_nodes(".price") %>% html_text() %>% gsub("\r\n", "", .))
(price = page %>% html_nodes(".price") %>% html_text() %>% gsub("\r\n ", "", .))
(price = page %>% html_nodes(".price") %>% html_text() %>% gsub("\r\n| ", "", .))
(in_stock = page %>% html_nodes("hr+ div .greenText") %>% html_text())
rm(file=list())
load("data/dat.rda")
library(devtools)
proj_path = file.path(Sys.getenv("HOME"), "openCPU/apps")
setwd(file.path(proj_path, "phph"))
load("data/dat.rda")
radio = subset(dat, RT=="Radiotherapy")
noradio = subset(dat, RT=="No radiotherapy")
devtools::use_data(radio, noradio, internal=TRUE, overwrite=TRUE)
a = capture.output("lang
sdkf sdf
asdkf ")
dat
print(summary(dat))
capture.output(print(summary(dat)))
capture.output(as.string(print(summary(dat))))
capture.output(as.character(print(summary(dat))))
as.character(print(summary(dat)))
str(as.character(print(summary(dat))))
toString(print(summary(dat)))
toString(print(summary(dat)), width=8)
toString(print(summary(dat)), width=6)
toString(print(summary(dat)), width=2)
toString(print(summary(dat)), width=1)
toString(print(summary(dat)))
a = capture.output(print(summary(dat)))
toString(a)
a
toString(a)
toString(a, width=6)
toString(a, width=8)
toString(a, width=100)
toString(a, width=50)
cox = survival::coxph(survival::Surv(TTOBRC, STATUS) ~ RT,
data=dat, method="breslow")
summary(cox)
cox$beta
coef(cox)
cox_summ = summary(cox)
str(cox_summ)
summ_cox = summary(cox)
summ_cox
summ_cox[1, c("coef", "exp(coef)", "Pr(>|z|)")]
summ_cox[, c("coef", "exp(coef)", "Pr(>|z|)")]
dim(summ_cox)
str(summ_cox)
summ_cox$coef[, c("coef", "exp(coef)", "Pr(>|z|)")]
str(summ_cox$coef[, c("coef", "exp(coef)", "Pr(>|z|)")])
toString(summ_cox$coef[, c("coef", "exp(coef)", "Pr(>|z|)")])
summ_cox$coef[, vars]
vars = c("coef", "exp(coef)", "Pr(>|z|)")
summ_cox$coef[, vars]
summ_cox$coef
summ_cox$coef[, vars]
summ_cox$coef[1, vars]
summ_cox$coef[, vars]
vars = c("coef", "exp(coef)", "Pr(>|z|)")
row.names(summ_cox)
row.names(summ_cox$coef)
document()
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
document()
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
library(opencpu)
opencpu$stop()
cleanup()
opencpu$start(2498)
document()
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
data <- read.table(header=TRUE, text='x        y15        16013.5	22016.5	14014.5	19017	13016	16013	20018	15012	21015.5	190')
fit = lm(y ~ x, data=data)
summary(fit)
17/3
1.5/17
2/17
url = "http://www.sears.com/craftsman-evolv-101-pc-mechanics-tool-set/p-00910025000P"
page = html(url, encoding="UTF-8")
library(cabaceo)
library(methods)
library(rvest)
url = "http://www.sears.com/craftsman-evolv-101-pc-mechanics-tool-set/p-00910025000P"
page = html(url, encoding="UTF-8")
library(cabaceo)
library(methods)
library(rvest)
url = "http://www.sears.com/craftsman-evolv-101-pc-mechanics-tool-set/p-00910025000P"
page = html(url, encoding="UTF-8")
(price = page %>% html_nodes("#p0_price h4") %>% html_text())
(price = page %>% html_nodes("#p0_price h4") %>% html_text() %>% gsub("\n| ", "",))
(price = page %>% html_nodes("#p0_price h4") %>% html_text() %>% gsub("\n|", "",))
(price = page %>% html_nodes("#p0_price h4") %>% html_text() %>% gsub("\n| ", "", .))
(title = page %>% html_nodes("title") %>% html_text())
in_stock = page %>% html_nodes(".product-fulfillment-max-ships-for span") %>% html_text()
(in_stock = page %>% html_nodes(".product-fulfillment-max-ships-for span") %>% html_text())
url = "http://www.costco.com/.product.100069986.html?cm_sp=RichRelevance-_-categorypageHorizontalTop-_-CategoryTopProducts&cm_vc=categorypageHorizontalTop|CategoryTopProducts"
page = html(url, encoding="UTF-8")
page = html(url)
url = "http://www.costco.com/.product.100069986.html?cm_sp=RichRelevance-_-categorypageHorizontalTop-_-CategoryTopProducts&cm_vc=categorypageHorizontalTop|CategoryTopProducts"
page = html(url)
doc = htmlParse(url, useInternalNodes=T)
library(XML)
doc = htmlParse(url, useInternalNodes=T)
url = "http://www.samsclub.com/sams/augason-farms-30-day-food-storage-emergency-all-in-one-pail/prod5610448.ip"
page = html(url, encoding="UTF-8")
(title = page %>% html_nodes("title") %>% html_text())
(price = page %>% html_nodes(".price") %>% html_text() %>% gsub("\r\n| ", "", .))
(price = page %>% html_nodes(".price+ .superscript , .price") %>% html_text() %>% gsub("\r\n| ", "", .))
(price = page %>% html_nodes(".price+ .superscript .price") %>% html_text() %>% gsub("\r\n| ", "", .))
(price = page %>% html_nodes(".price+ .superscript , .price") %>% html_text() )
paste(price, collapse=".")
paste0("$", paste(price, collapse="."))
(price = paste0("$", paste(price, collapse=".")))
(status = page %>% html_nodes("hr+ div .greenText") %>% html_text())
(status = page %>% html_nodes("div.data-onlinestatus") %>% html_text())
(status = page %>% html_nodes("data-onlinestatus") %>% html_text())
(status = page %>% html_nodes(".data-onlinestatus") %>% html_text())
(status = page %>% html_nodes("div") %>% html_text())
(status = page %>% html_nodes("div.class") %>% html_text())
(status = page %>% html_nodes("div.name") %>% html_text())
(status = page %>% html_tag("div") %>% html_text())
(status = page %>% html_tag() %>% html_text())
(status = page %>% html_nodes(xpath="/*/head/dive[@data-onlinestatus]") %>% html_text())
(status = page %>% html_nodes(xpath="/*/head/div[@data-onlinestatus]") %>% html_text())
(status = page %>% html_nodes(xpath="//div[@data-onlinestatus]") %>% html_text())
(status = page %>% html_nodes(xpath="//script[@online_stock_status]") %>% html_text())
(status = page %>% html_nodes("script") %>% html_text())
(status = page %>% html_nodes(xpath="//div[@data-onlinestatus]") %>% html_text())
(status = page %>% html_nodes(xpath="//div[@data-onlinestatus='inStock']") %>% html_text())
(status = page %>% html_nodes(xpath="//div[@data-onlinestatus='inStock']"))
(status = page %>% html_nodes(xpath="div[@data-onlinestatus='inStock']"))
(status = page %>% html_nodes(xpath="@div[@data-onlinestatus='inStock']"))
(status = page %>% html_nodes(xpath="@div[@data-onlinestatus]"))
(status = page %>% html_nodes(xpath="\\@div[@data-onlinestatus]"))
(status = page %>% html_nodes(xpath="/*head/@div[@data-onlinestatus]"))
(status = page %>% html_nodes(xpath="//@div[@data-onlinestatus]"))
(status = page %>% html_nodes(xpath="//@div[@data-onlinestatus]") %>% html_text())
(status = page %>% html_nodes(xpath="//div[@data-onlinestatus]") %>% html_text())
page %>% html_nodes("div")
page %>% html_nodes("div") %>% html_text()
a = page %>% html_nodes("div") %>% html_text()
(status = page %>% html_nodes(xpath="//div[@data-onlinestatus='inStock']") %>% html_text())
(status = page %>% html_nodes(xpath="//div[@data-onlinestatus='inStock']") %>%
html_text() %>% gsub("\n\t", "", .))
(status = page %>% html_nodes(xpath="//div[@data-onlinestatus='inStock']") %>%
html_text() %>% gsub("\n|\t*", "", .))
nchar(status)
if (nchar(status) > 0) status = "in stock"
else status = "out of stock"
if (nchar(status) > 0) { status = "in stock" }
else { status = "out of stock" }
(status = ifelse(nchar(status) > 0, "in stock", "out of stock"))
url = "http://www.cabelas.com/product/Camping/Camp-Bedding/Sleeping-Pads%7C/pc/104795280/c/104712480/sc/104484780/Venture-Outdoorsreg-Ultra-Comfort-Contoured-Camping-Mat/1524433.uts?destination=%2Fcatalog%2Fbrowse%2Fsleeping-pads%2F_%2FN-1100678%2FNs-CATEGORY_SEQ_104484780%3FWTz_l%3DSBC%253BMMcat104795280%253Bcat104712480&WTz_l=SBC%3BMMcat104795280%3Bcat104712480%3Bcat104484780"
page = html(url, encoding = "UTF-8")
(title = page %>% html_nodes("title") %>% html_text())
(price = page %>% html_nodes("dd") %>% html_text())
(price = page %>% html_nodes("d") %>% html_text())
(price = page %>% html_nodes("dl dd") %>% html_text())
(price = page %>% html_nodes("dl") %>% html_text())
(price = page %>% html_nodes("dd") %>% html_text())
(price = page %>% html_nodes(".price") %>% html_text())
(price = page %>% html_nodes(".dd") %>% html_text())
(price = page %>% html_nodes("dd") %>% html_text())
(price = price[1])
(status = page %>% html_nodes(".stockMessage") %>% html_text())
(status = page %>% html_nodes(".stockMessage") %>% html_text() %>% gsub("\n\t| "))
(status = page %>% html_nodes(".stockMessage") %>% html_text() %>% gsub("\n\t| ", "", .))
(status = page %>% html_nodes(".stockMessage") %>% html_text() %>% gsub("\n|\t| ", "", .))
url = "http://www.harborfreight.com/tool-storage/workbench/multipurpose-workbench-with-light-60723.html"
page = html(url, encoding = "UTF-8")
(price = page %>% html_nodes(".sale .price-label+ span") %>% html_text())
(price = page %>% html_nodes(".sale .price-label+ span") %>% html_text() %>% gsub("\n| ", "", .))
(title = page %>% html_nodes("title") %>% html_txt())
(title = page %>% html_nodes("title") %>% html_text())
doc = htmlParse(url, useInternalNodes=T)
status_url = xpathSApply(doc, "//meta[@property='og:availability']/@content")
status_url
status = xpathSApply(doc, "//meta[@property='og:availability']/@content")
names(status) = NULL
status
# install local package
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
# run single server
library(opencpu)
opencpu$stop()
cleanup()
opencpu$start(2498)
library(devtools)
proj_path = file.path(Sys.getenv("HOME"), "openCPU/apps")
setwd(file.path(proj_path, "phph"))
document()
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
library(opencpu)
opencpu$stop()
cleanup()
opencpu$start(2498)
?use_data
proj_path = file.path(Sys.getenv("HOME"), "openCPU/apps")
setwd(file.path(proj_path, "phph"))
load("data/dat.rda")
# split data
radio = subset(dat, RT=="Radiotherapy")
noradio = subset(dat, RT=="No radiotherapy")
# get summary stats
dat$STATUS = as.factor(ifelse(dat$STATUS==1, "breast cancer",
"no breast cancer"))
summ_convars = list()
summ_catvars = list()
for (j in 1:ncol(dat)) {
head = names(dat)[j]
v = dat[[j]]
summ = summary(v)
name = names(summ)
if (class(v) %in% c("integer", "numeric")) {
summ = as.numeric(summ)
df = data.frame(name, summ)
names(df) = c("name", head)
summ_convars[[head]] = df
}
if (class(v) %in% c("character", "factor")) {
summ = as.integer(summ)
df = data.frame(name, summ)
names(df) = c("name", head)
summ_catvars[[head]] = df
}
}
summ_stats = summary(dat)
devtools::use_data(summ_convars, summ_catvars, summ_stats, radio, noradio,
internal=TRUE, overwrite=TRUE)
document()
library(devtools)
document()
opencpu$stop()
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$start(2498)
document()
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
dat
a = capture.output(print(summary(dat)))
a
a = capture.output(cat(summary(dat)))
a
a = capture.output(print(summary(dat)))
a
str(a)
a
a[1]
a[2]
a[3]
toString(a, width=length(a[1]))
length(a[1])
nchar(a[1])
toString(a, width=nchar(a[1]))
paste(a[1], a[2], sep="\n")
print(paste(a[1], a[2], sep="\n"))
cat(paste(a[1], a[2], sep="\n"))
cat(paste(a, collapse="\n"))
str(cat(paste(a, collapse="\n")))
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
document()
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
library(opencpu)
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
cleanup()
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
install.packages("/Users/gmlang/openCPU/apps/phph", repos=NULL, type="source")
library(phph)
opencpu$stop()
cleanup()
opencpu$start(2498)
t0 = proc.time()
0.0001
log(0.0001)
log(0.00001)
