# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
discount_factor = 0.9235
temp = earnings * discount_factor
ss_tax = ifelse(temp <= sst_cap, temp * sst, sst_cap * sst)
med_tax = ifelse(temp <= medt_cap, temp * medt,
medt_cap * medt + (temp - medt_cap) * medt2)
se_tax = ss_tax + med_tax
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
tbl
subset(tbl, taxable_income > single_upr)
tbl$diff = taxable_income - tbl$single_lwr
tbl
tbl$tax2 = tbl$diff * diff$rate
tbl$tax2 = tbl$diff * tbl$rate
tbl
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding tax amount in dollars
tbl = within(tbl, {tax_upr = rate * single_upr})
tbl
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
discount_factor = 0.9235
temp = earnings * discount_factor
ss_tax = ifelse(temp <= sst_cap, temp * sst, sst_cap * sst)
med_tax = ifelse(temp <= medt_cap, temp * medt,
medt_cap * medt + (temp - medt_cap) * medt2)
se_tax = ss_tax + med_tax
deduction_se = 0.5 * se_tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
tbl
tbl$tax_lwr = (taxable_income - tbl$single_lwr) * tbl$rate
tbl
tax_diff = (taxable_income - tbl$single_lwr) * tbl$rate
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding tax amount in dollars
tbl = within(tbl, {tax_upr = rate * single_upr})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
discount_factor = 0.9235
temp = earnings * discount_factor
ss_tax = ifelse(temp <= sst_cap, temp * sst, sst_cap * sst)
med_tax = ifelse(temp <= medt_cap, temp * medt,
medt_cap * medt + (temp - medt_cap) * medt2)
se_tax = ss_tax + med_tax
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
#
tbl$tax_diff = (taxable_income - tbl$single_lwr) * tbl$rate
tbl
tbl$tax = min(tbl$tax_upr, tbl$tax_diff)
tbl
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding tax amount in dollars
tbl = within(tbl, {tax_upr = rate * single_upr})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
discount_factor = 0.9235
temp = earnings * discount_factor
ss_tax = ifelse(temp <= sst_cap, temp * sst, sst_cap * sst)
med_tax = ifelse(temp <= medt_cap, temp * medt,
medt_cap * medt + (temp - medt_cap) * medt2)
se_tax = ss_tax + med_tax
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
#
tbl$tax_diff = (taxable_income - tbl$single_lwr) * tbl$rate
tbl$tax = min(tbl$tax_upr, tbl$tax_diff, na.rm=T)
tbl
min(tbl$tax_upr, tbl$tax_diff)
pmin(tbl$tax_upr, tbl$tax_dif)
tbl$tax = pmin(tbl$tax_upr, tbl$tax_dif, na.rm=T)
tbl$tax
income_tax = sum(subset(tbl, tax>0)$tax)
income_tax
subtbl = subset(tbl, tax>0)
subtbl
income_tax = sum(subtbl$tax)
income_tax
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket upper bound tax amount in dollars
tbl = within(tbl, {tax_upr = rate * single_upr})
tbl
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket upper bound tax amount in dollars
tbl = within(tbl, {tax_upr = rate * single_upr})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
se_tax= calc_se_tax(earnings)
se_tax
deduction_se = 0.5 * se_tax
deduction_se
taxable_income = earnings - deduction_standard - exemptions - deduction_se
taxable_income
tbl$tax_diff = (taxable_income - tbl$single_lwr) * tbl$rate
tbl$tax = pmin(tbl$tax_upr, tbl$tax_dif, na.rm=T)
subtbl = subset(tbl, tax > 0)
subtbl
income_tax = sum(subtbl$tax)
income_tax
taxable_income
taxable_income * 0.15 + 922.5
(taxable_income -9225)* 0.15 + 922.5
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket upper bound tax amount in dollars
tbl = within(tbl, {tax_upr = rate * single_upr})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
se_tax= calc_se_tax(earnings)
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
# calculate the difference bewteen taxable income and single_lwr and calculate
# the corresponding tax amount
tbl$tax_diff = (taxable_income - tbl$single_lwr) * tbl$rate
# find the actual tax amount for each bracket
tbl$tax = pmin(tbl$tax_upr, tbl$tax_dif, na.rm=T)
# ignore rows where tax is 0 or negative
subtbl = subset(tbl, tax > 0)
subtbl
taxable_income
(73341.7 - 37450)*0.25
37450 * 0.15
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket tax based on the diff of upr and lwr
tbl = within(tbl, {tax_diff1 = rate * (single_upr-single_lwr)})
tbl
tbl[-7,]
tbl[1:5,]$tax_diff1
sum(tbl[1:5,]$tax_diff1)
sum(tbl[1:6,]$tax_diff1)
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket tax based on the diff of upr and lwr
tbl = within(tbl, {tax_diff1 = rate * (single_upr-single_lwr)})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
se_tax= calc_se_tax(earnings)
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
# calculate the difference bewteen taxable income and single_lwr and calculate
# the corresponding tax amount
tbl$tax_diff2 = (taxable_income - tbl$single_lwr) * tbl$rate
# find the actual tax amount for each bracket
tbl$tax = pmin(tbl$tax_diff1, tbl$tax_diff2, na.rm=T)
# ignore rows where tax is 0 or negative
subtbl = subset(tbl, tax > 0)
subtbl
income_tax = sum(subtbl$tax)
income_tax
taxable_income
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket tax based on the diff of upr and lwr
tbl = within(tbl, {tax_diff1 = rate * (single_upr-single_lwr)})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
se_tax= calc_se_tax(earnings)
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
# calculate the difference bewteen taxable income and single_lwr and calculate
# the corresponding tax amount
tbl$tax_diff2 = (taxable_income - tbl$single_lwr) * tbl$rate
# find the actual tax amount for each bracket
tbl$tax = pmin(tbl$tax_diff1, tbl$tax_diff2, na.rm=T)
# ignore rows where tax is 0 or negative
subtbl = subset(tbl, tax > 0)
subtbl
# calculate the income tax
income_tax = sum(subtbl$tax)
income_tax
taxable_income
922.50 + (taxable_income-9225)*0.15
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket tax based on the diff of upr and lwr
tbl = within(tbl, {tax_diff1 = rate * (single_upr-single_lwr)})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
se_tax= calc_se_tax(earnings)
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
# calculate the difference bewteen taxable income and single_lwr and calculate
# the corresponding tax amount
tbl$tax_diff2 = (taxable_income - tbl$single_lwr) * tbl$rate
# find the actual tax amount for each bracket
tbl$tax = pmin(tbl$tax_diff1, tbl$tax_diff2, na.rm=T)
# ignore rows where tax is 0 or negative
subtbl = subset(tbl, tax > 0)
subtbl
# calculate the income tax
income_tax = sum(subtbl$tax)
income_tax
taxable_income
5156.25 + 0.25*(taxable_income - 37450)
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket tax based on the diff of upr and lwr
tbl = within(tbl, {tax_diff1 = rate * (single_upr-single_lwr)})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
se_tax= calc_se_tax(earnings)
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
# calculate the difference bewteen taxable income and single_lwr and calculate
# the corresponding tax amount
tbl$tax_diff2 = (taxable_income - tbl$single_lwr) * tbl$rate
# find the actual tax amount for each bracket
tbl$tax = pmin(tbl$tax_diff1, tbl$tax_diff2, na.rm=T)
# ignore rows where tax is 0 or negative
subtbl = subset(tbl, tax > 0)
subtbl
# calculate the income tax
income_tax = sum(subtbl$tax)
income_tax
taxable_income
119996.25+0.396*(taxable_income-413201)
se_tax
fed_tax = income_tax + se_tax
fed_tax
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket tax based on the diff of upr and lwr
tbl = within(tbl, {tax_diff1 = rate * (single_upr-single_lwr)})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
se_tax= calc_se_tax(earnings)
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
taxable_income
fed_tax / earnings
earnings - fed_tax
earnings
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket tax based on the diff of upr and lwr
tbl = within(tbl, {tax_diff1 = rate * (single_upr-single_lwr)})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
se_tax= calc_se_tax(earnings)
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
taxable_income
tbl$tax_diff2 = (taxable_income - tbl$single_lwr) * tbl$rate
# find the actual tax amount for each bracket
tbl$tax = pmin(tbl$tax_diff1, tbl$tax_diff2, na.rm=T)
# ignore rows where tax is 0 or negative
subtbl = subset(tbl, tax > 0)
subtbl
# calculate the income tax
income_tax = sum(subtbl$tax)
income_tax
fed_tax = income_tax + se_tax
fed_tax
# calculate effective tax rate
fed_tax / earnings
earnings - fed_tax
25699.73 *12 /5
### income tax deductions for single filer, change year by year
deduction_standard = 6300
exemptions = 4000
###
# set paths
proj_path = "~/Dropbox/me/tax-calculator"
input_path = file.path(proj_path, "input")
data_path = file.path(input_path, "income-tax-individual.csv")
# read in income tax lookup table
tbl = read.csv(data_path, header=T, na.strings="")
tbl
# append a column of corresponding bracket tax based on the diff of upr and lwr
tbl = within(tbl, {tax_diff1 = rate * (single_upr-single_lwr)})
tbl
# source other input files
source(file.path(input_path, "self-employment-tax.R"))
source(file.path(input_path, "user-input.R"))
# calculate net income (also called net profit or earnings)
earnings = income - expense
earnings
# calculate self-employment tax
se_tax= calc_se_tax(earnings)
# can claim half of self_employ_tax as deduction when calculating income tax
deduction_se = 0.5 * se_tax
# calculate income tax
taxable_income = earnings - deduction_standard - exemptions - deduction_se
taxable_income
# calculate the difference bewteen taxable income and single_lwr and calculate
# the corresponding tax amount
tbl$tax_diff2 = (taxable_income - tbl$single_lwr) * tbl$rate
# find the actual tax amount for each bracket
tbl$tax = pmin(tbl$tax_diff1, tbl$tax_diff2, na.rm=T)
# ignore rows where tax is 0 or negative
subtbl = subset(tbl, tax > 0)
# subtbl
# calculate the income tax
income_tax = sum(subtbl$tax)
income_tax
fed_tax = income_tax + se_tax
fed_tax
fed_tax / earnings
earnings - fed_tax
